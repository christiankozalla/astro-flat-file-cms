---
import "../../../styles/admin.css";
import FrontMatter from "../../../components/admin/FrontMatter.astro";
import { authenticationHandler, helpers } from "blog-backend";

const cookies = Astro.request.headers.get("cookie");
const { isValid } = await authenticationHandler(helpers.parseCookies(cookies));

if (!isValid) {
  return Astro.redirect("/admin/login");
}
const post = helpers.emptyPost();
---

<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>Artikel bearbeiten - Michaels Blog</title>
    <link rel="stylesheet" href="https://unpkg.com/bytemd/dist/index.css" />
    <script is:inline>
      window.process = {
        env: "production",
      };
    </script>
    <script is:inline src="https://unpkg.com/bytemd"></script>
    <style>
      body {
        font-family: sans-serif;
      }

      .bytemd {
        height: calc(100vh - 100px);
      }

      #editor-controls {
        margin-bottom: 24px;
      }

      #frontmatter span[id$="-display"] {
        background-color: lightgrey;
        border-radius: 4px;
        margin-right: 8px;
        padding: 4px 8px;
      }

      #form {
        margin: 24px 0;
      }

      #form label {
        text-transform: capitalize;
        font-size: 1.2rem;
      }

      #form label + input {
        margin: 0 12px;
      }
    </style>
  </head>

  <body>
    <FrontMatter frontmatter={post.frontMatter} />
    <div id="editor-controls">
      <button id="draft" data-draft="true">Entwurf speichern</button>
      <button id="publish">Ver√∂ffentlichen</button>
    </div>
    <div id="markdown-editor"></div>
    <script is:inline define:vars={{ post }}>
      window.post = post;
      const editor = new bytemd.Editor({
        target: document.getElementById("markdown-editor"),
        props: {
          value: post.markdown,
        },
      });

      editor.$on("change", (e) => {
        post.markdown = e.detail.value;
        editor.$set({ value: e.detail.value });
      });

      const editorControls = document.getElementById("editor-controls");
      editorControls.addEventListener("click", (e) => {
        if (!post.frontMatter.title) {
          // display user notification
          return;
        }

        const slug = slugify(post.frontMatter.title);
        const isDraft = e.target.dataset.draft;
        e.target.disabled = true;

        const route = `/api/admin/posts/${slug}${isDraft ? "?draft" : ""}`;

        fetch(route, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            markdown: window.post.markdown,
            frontMatter: window.post.frontMatter,
          }),
        }).then((response) => {
          console.log(response);
          if (response.status === 201) {
            e.target.disabled = false;
            location.replace(`/admin/${slug}`);
          }
        });
      });

      function slugify(input) {
        return input
          .toLowerCase()
          .replace(/\u00fc/g, "ue")
          .replace(/\u00e4/g, "ae")
          .replace(/\u00f6/g, "oe")
          .replaceAll(" ", "-");
      }
    </script>
  </body>
</html>
